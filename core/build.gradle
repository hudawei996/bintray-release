plugins {
    id 'com.novoda.bintray-release' version '0.8.0'
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven'
    id 'com.novoda.build-properties' version '0.4.1'
}

repositories {
    jcenter()
}

version = '0.8.1'

buildProperties {
    cli {
        using(project)
    }

    bintray {
        def bintrayCredentials = {
            return isDryRun() ?
                    ['bintrayRepo': 'n/a', 'bintrayUser': 'n/a', 'bintrayKey': 'n/a'] :
                    new File("${System.getenv('BINTRAY_PROPERTIES')}")
        }
        using(bintrayCredentials()).or(cli)
        description = '''This should contain the following properties:
                      | - bintrayRepo: name of the repo of the organisation to deploy the artifacts to
                      | - bintrayUser: name of the account used to deploy the artifacts
                      | - bintrayKey: API key of the account used to deploy the artifacts
        '''.stripMargin()
    }

    publish {
        def generateVersion = {
            return isSnapshot() ? "SNAPSHOT-${System.getenv('BUILD_NUMBER') ?: 'LOCAL'}" : project.version
        }
        using(['version': "${generateVersion()}"]).or(buildProperties.bintray)
    }
}

dependencies {
    compile localGroovy()
    compile 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.9.0'
}

compileGroovy {
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

gradlePlugin {
    plugins {
        binrayRelease {
            id = "com.novoda.bintray-release"
            implementationClass = "com.novoda.gradle.release.ReleasePlugin"
        }
        legacy {
            id = "bintray-release"
            implementationClass = "com.novoda.gradle.release.ReleasePlugin"
        }
    }
}

publish {
    userOrg = 'novoda'
    groupId = 'com.novoda'
    artifactId = rootProject.name
    desc = 'Super duper easy way to release your Android and other artifacts to bintray'
    website = "https://github.com/novoda/${rootProject.name}"

    version = project.buildProperties.publish['version'].string
    publishVersion = project.buildProperties.publish['version'].string
    bintrayUser = project.buildProperties.publish['bintrayUser'].string
    bintrayKey = project.buildProperties.publish['bintrayKey'].string
    repoName = buildProperties.publish['bintrayRepo'].string
}

boolean isDryRun() {
    buildProperties.cli['dryRun'].or(true).boolean
}
boolean isSnapshot() {
    buildProperties.cli['bintraySnapshot'].or(false).boolean
}
